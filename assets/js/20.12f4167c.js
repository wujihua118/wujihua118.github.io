(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{529:function(v,_,t){"use strict";t.r(_);var s=t(3),a=Object(s.a)({},(function(){var v=this,_=v.$createElement,t=v._self._c||_;return t("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[t("p",[v._v("面试必问")]),v._v(" "),t("h2",{attrs:{id:"浏览器中输入网址"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#浏览器中输入网址"}},[v._v("#")]),v._v(" 浏览器中输入网址")]),v._v(" "),t("ul",[t("li",[t("code",[v._v("http")]),v._v("或"),t("code",[v._v("https")])]),v._v(" "),t("li",[t("code",[v._v("url")]),v._v("的组成\n"),t("ul",[t("li",[v._v("协议部分："),t("code",[v._v("https://www.bilibili.com/")]),v._v("，该url的协议部分为https，这代表该网页使用的是https协议")]),v._v(" "),t("li",[v._v("域名部分："),t("code",[v._v("https://www.bilibili.com/")]),v._v("，该url的域名部分为"),t("code",[v._v("www.bilibili.com")]),v._v("。一个url中，也可以使用IP地址作为域名使用")]),v._v(" "),t("li",[v._v("端口部分：跟在域名后面的是端口，端口和域名之间用"),t("code",[v._v(":")]),v._v("作为分隔符，端口不是url中必须的部分，如果省略端口部分，将采用默认端口"),t("code",[v._v("80")])]),v._v(" "),t("li",[v._v("虚拟目录部分："),t("code",[v._v("https://juejin.cn/user/3940246036414728")]),v._v("，从域名后的第一个"),t("code",[v._v("/")]),v._v("开始到最后一个"),t("code",[v._v("/")]),v._v("为止。虚拟目录也不是url必须的部分。本例中为"),t("code",[v._v("/user/")])]),v._v(" "),t("li",[v._v("文件名部分：从域名后的最后一个"),t("code",[v._v("/")]),v._v("开始到"),t("code",[v._v("?")]),v._v("为止。如果没有"),t("code",[v._v("?")]),v._v(",则是从域名后的最后一个"),t("code",[v._v("/")]),v._v("开始到"),t("code",[v._v("#")]),v._v("为止，是文件部分，如果没有"),t("code",[v._v("?")]),v._v("和"),t("code",[v._v("#")]),v._v("，那么从域名后的最后一个"),t("code",[v._v("/")]),v._v("开始到结束，都是文件名部分。文件名部分也不是url必须的部分，如果没有文件名部分，则采用默认的文件名")]),v._v(" "),t("li",[v._v("锚部分：从"),t("code",[v._v("#")]),v._v("开始到最后，都是锚部分。锚部分也不是url必须的部分")]),v._v(" "),t("li",[v._v("参数部分：从"),t("code",[v._v("?")]),v._v("开始到"),t("code",[v._v("#")]),v._v("为止之间的部分，都是参数部分。又称搜索部分、查询部分。参数可以允许有多个参数，参数与参数之间用"),t("code",[v._v("&")]),v._v("分隔符")])])])]),v._v(" "),t("h2",{attrs:{id:"通过dns解析域名的实际ip地址"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#通过dns解析域名的实际ip地址"}},[v._v("#")]),v._v(" 通过DNS解析域名的实际IP地址")]),v._v(" "),t("p",[v._v("发送至DNS服务器并获得对应的web服务器的IP地址。")]),v._v(" "),t("p",[v._v("DNS解析首先会从你的浏览器的缓存中去寻找是否有这个网址对应的IP地址，如果没有就向OS系统的DNS缓存中寻找，如果没有就是路由器的DNS缓存，如果没有就是ISP的DNS缓存中寻找。所以，缓存寻找的过程就是：")]),v._v(" "),t("ul",[t("li",[t("strong",[v._v("浏览器 => 系统 => 路由器 => ISP")])])]),v._v(" "),t("p",[v._v("如果在某个缓存中找到的话就直接跳到下一步。")]),v._v(" "),t("p",[v._v("如果都没有找到的话，就会向ISP或者公共的域名解析服务发起DNS查找请求，这个查找的过程还是一个递归查找的过程。")]),v._v(" "),t("h2",{attrs:{id:"检查浏览器是否有缓存"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#检查浏览器是否有缓存"}},[v._v("#")]),v._v(" 检查浏览器是否有缓存")]),v._v(" "),t("ol",[t("li",[v._v("通过"),t("code",[v._v("Cache-Control")]),v._v("和"),t("code",[v._v("Expires")]),v._v("来检查是否命中强缓存，命中则直接取本地磁盘的html（状态码为200 from disk(or memory) cache，内存or磁盘）")]),v._v(" "),t("li",[v._v("如果没有命中强缓存，则会向服务器发起请求（先进行下一步的TCP连接），服务器通过"),t("code",[v._v("Etag")]),v._v("和"),t("code",[v._v("Last-Modify")]),v._v("来与服务器确认返回的响应是否被更改（协商缓存），若无更改则返回状态码（304 Not Modified），浏览器取本地缓存")]),v._v(" "),t("li",[v._v("若强缓存和协商缓存都没有命中则返回请求结果")])]),v._v(" "),t("h2",{attrs:{id:"与web服务器建立tcp连接"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#与web服务器建立tcp连接"}},[v._v("#")]),v._v(" 与web服务器建立TCP连接")]),v._v(" "),t("p",[v._v("TCP协议通过三次握手建立连接")]),v._v(" "),t("ul",[t("li",[v._v("客户端通过"),t("code",[v._v("SYN")]),v._v("报文段发送连接请求，确定服务端是否开启端口准备连接。状态设置为"),t("code",[v._v("SYN_SEND")])]),v._v(" "),t("li",[v._v("服务端如果没有开着的端口并且决定接受连接，就会返回一个"),t("code",[v._v("SYN+ACK")]),v._v("报文段给客户端。状态设置为"),t("code",[v._v("SYN_RECV")])]),v._v(" "),t("li",[v._v("客户端收到服务器的"),t("code",[v._v("SYN+ACK")]),v._v("报文段，向服务器发送ACK报文段表示确认。此时客户端和服务端都设置为"),t("code",[v._v("ESTABLISHED")]),v._v("状态。连接建立，可以进行数据传输了")])]),v._v(" "),t("p",[v._v("简单解释就是：")]),v._v(" "),t("ul",[t("li",[v._v("客户端：你能收到我的消息吗？")]),v._v(" "),t("li",[v._v("服务端：可以的，那你能接收到我的回复吗？")]),v._v(" "),t("li",[v._v("客户端：可以，开始吧")])]),v._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"title"}),t("p",[v._v("为什么是3次？=> 避免历史连接，确认客户端发过来的请求是这次要通信的人\n为什么不是4次？=> 3次够了，第4次浪费")])]),t("h2",{attrs:{id:"若协议是https则会做加密"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#若协议是https则会做加密"}},[v._v("#")]),v._v(" 若协议是https则会做加密")]),v._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"title"}),t("p",[v._v("HTTPS = HTTP + 加密 + 认证 + 完整性保护")])]),t("ol",[t("li",[v._v("要申请CA证书，并安装在服务器上（一个文件配置nginx支持监听443端口开启ssl并设置证书路径）")]),v._v(" "),t("li",[v._v("浏览器发送请求")]),v._v(" "),t("li",[v._v("网站从浏览器发送过来的加密规则中选一组自身也支持的加密算法和hash算法，并向浏览器发送带有公钥的证书，当然证书还包含了很多信息，如网站地址、证书的颁发结构、过期时间等")]),v._v(" "),t("li",[v._v("浏览器解析证书\n"),t("ul",[t("li",[v._v("验证证书的合法性。如颁发的机构是否合法、证书中的网站地址是否与访问的地址一致。若不合法，则浏览器提示证书不受信任，若合法，浏览器会显示一个小锁头")]),v._v(" "),t("li",[v._v("若合法，或浏用户接受了不合法的证书，浏览器会随机生成一串随机的密码（密钥），并用证书中提供的公钥加密")]),v._v(" "),t("li",[v._v("使用约定好的hash计算握手信息，并使用生成的随机数（密钥）对信息进行加密，最后将之前生成的所有消息一并发送给网站服务器")])])]),v._v(" "),t("li",[v._v("网站服务器解析信息。用已有的私钥将密钥解密出来，然后用密钥解密发送过来的握手信息，并验证是否跟浏览器传过来的一致。然后在用密钥加密一段握手信息，发送给浏览器")]),v._v(" "),t("li",[v._v("浏览器解密并计算握手信息的hash，如果与服务端发送过来的hash一致，此时握手过程结束，之后所有的通信数据将有之前浏览器生成的随机密码并利用对称加密算法进行加密。这里浏览器与网站互相发送加密的握手信息并验证，目的是为了保证双方都获得了一致的密码，并且可以正常的加密解密，为后续真正的数据传输做一次测试")])]),v._v(" "),t("h2",{attrs:{id:"浏览器发送请求获取页面html"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#浏览器发送请求获取页面html"}},[v._v("#")]),v._v(" 浏览器发送请求获取页面html")]),v._v(" "),t("p",[v._v("浏览器向web服务器的IP地址发送相应的http get请求页面html")]),v._v(" "),t("p",[v._v("通常的请求是：请求的方式("),t("code",[v._v("get")]),v._v("或"),t("code",[v._v("post")]),v._v(") + 请求资源的位置（"),t("code",[v._v("(url + HTTP/[版本号](HTTP/1.1))")]),v._v("）")]),v._v(" "),t("p",[v._v("发起http请求的过程主要是组装http报文并将报文发向指定地址的过程")]),v._v(" "),t("h2",{attrs:{id:"服务器响应html"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#服务器响应html"}},[v._v("#")]),v._v(" 服务器响应html")]),v._v(" "),t("p",[v._v("这里的服务器可能是server或cdn")]),v._v(" "),t("h2",{attrs:{id:"浏览器解析html"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#浏览器解析html"}},[v._v("#")]),v._v(" 浏览器解析html")]),v._v(" "),t("p",[v._v("html文档 => 标签 => 树状结构")]),v._v(" "),t("p",[v._v("style标签 => 解析css")]),v._v(" "),t("p",[v._v("link标签 => 异步加载")]),v._v(" "),t("p",[v._v("script标签 => 行内写法 => 直接解析执行\tsrc引入 => 同步下载脚本文件 => 下载完成立即执行")]),v._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"title"}),t("p",[v._v("这里的下载过程是阻塞的，其它流程都会等下载完成后执行")])]),t("h2",{attrs:{id:"浏览器渲染页面"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#浏览器渲染页面"}},[v._v("#")]),v._v(" 浏览器渲染页面")]),v._v(" "),t("p",[v._v("解析html文档 => 标签节点树")]),v._v(" "),t("p",[v._v("解析css => 样式规则树")]),v._v(" "),t("p",[v._v("标签节点树 + 样式规则树 => 渲染树")]),v._v(" "),t("p",[v._v("浏览器最终显示渲染树形成页面")]),v._v(" "),t("h2",{attrs:{id:"浏览器解析执行js脚本"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#浏览器解析执行js脚本"}},[v._v("#")]),v._v(" 浏览器解析执行js脚本")]),v._v(" "),t("p",[v._v("dom操作、ajax网络请求等")]),v._v(" "),t("h2",{attrs:{id:"浏览器发起网络请求"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#浏览器发起网络请求"}},[v._v("#")]),v._v(" 浏览器发起网络请求")]),v._v(" "),t("p",[t("code",[v._v("web-socket")]),v._v("、"),t("code",[v._v("ajax")]),v._v("等，这个过程通常是为了获取数据")]),v._v(" "),t("h2",{attrs:{id:"服务器响应ajax请求"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#服务器响应ajax请求"}},[v._v("#")]),v._v(" 服务器响应ajax请求")]),v._v(" "),t("ul",[t("li",[t("p",[v._v("ajax请求到达真正的server之前，可能还会经过网关全线校验、消息队列、nginx负载均衡处理")])]),v._v(" "),t("li",[t("p",[v._v("到达server之后，后端会解析http请求报文，得到url、请求参数、http头、cookie等等信息")])]),v._v(" "),t("li",[t("p",[v._v("登陆校验、权限校验（cookie校验、jwt权限校验等）")])]),v._v(" "),t("li",[t("p",[v._v("返回响应数据")])])]),v._v(" "),t("h2",{attrs:{id:"浏览器处理事件循环等异步逻辑"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#浏览器处理事件循环等异步逻辑"}},[v._v("#")]),v._v(" 浏览器处理事件循环等异步逻辑")]),v._v(" "),t("p",[t("code",[v._v("setTimeout")]),v._v("、"),t("code",[v._v("setInterval")]),v._v("、"),t("code",[v._v("Promise")]),v._v("等宏任务、微任务队列")])])}),[],!1,null,null,null);_.default=a.exports}}]);